name: CI - Formal and Computational Verification

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  lean4-formal-verification:
    name: Lean4 Formal Proofs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Lake/LEAN
        uses: actions/cache@v4
        with:
          path: |
            ~/.elan
            .lake
            lake-packages
          key: ${{ runner.os }}-lean-${{ hashFiles('lean-toolchain') }}-${{ hashFiles('lakefile.lean') }}-${{ hashFiles('lake-manifest.json', '.lake/lakefile.olean') }}
          restore-keys: |
            ${{ runner.os }}-lean-${{ hashFiles('lean-toolchain') }}-${{ hashFiles('lakefile.lean') }}-
            ${{ runner.os }}-lean-

      - name: Install Lean (elan)
        run: |
          bash Scripts/setup_lean.sh
        shell: bash

      - name: Build Lean Proofs (lake)
        run: |
          bash Scripts/build_lean_proofs.sh
        shell: bash

      - name: Check for 'sorry' placeholders
        run: |
          bash Scripts/check_no_sorry.sh
        shell: bash
        continue-on-error: true

      - name: Lint Lean code
        run: |
          bash Scripts/lint.sh
        shell: bash

  python-numerical-tests:
    name: Python Numerical Verification
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run verification framework tests
        run: |
          python test_verification.py
        continue-on-error: true

      - name: Run unified BKM tests
        run: |
          python test_unified_bkm.py

      - name: Run unconditional proof tests
        run: |
          python test_unconditional.py
        continue-on-error: true

      - name: Run DNS verification tests
        run: |
          cd DNS-Verification/UnifiedBKM && python test_unified_bkm.py
        continue-on-error: true

  integration-summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [lean4-formal-verification, python-numerical-tests]
    if: always()
    steps:
      - name: Check overall status
        run: |
          echo "================================================"
          echo "CI VERIFICATION SUMMARY"
          echo "================================================"
          echo "Lean4 Formal Verification: ${{ needs.lean4-formal-verification.result }}"
          echo "Python Numerical Tests: ${{ needs.python-numerical-tests.result }}"
          echo "================================================"
          if [[ "${{ needs.lean4-formal-verification.result }}" == "failure" ]] || [[ "${{ needs.python-numerical-tests.result }}" == "failure" ]]; then
            echo "❌ Some verification checks failed"
            exit 1
          else
            echo "✅ All verification checks passed"
          fi
